buildscript {
    ext {
        lambokVersion = '1.18.34'
        jacksonVersion = '2.17.2'
        spockSpringVersion = '2.4-M1-groovy-4.0'
        springVersion = '3.3.2'
        springDependencyManagmentVersion = '1.1.6'
        apachGroovyVersion = '4.0.22'
        junitVersion = '4.13.2'

    }

}

plugins {
    id 'groovy'
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version "${springVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagmentVersion}"

}
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
}
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}


repositories {
    mavenCentral()
}


dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.projectlombok:lombok:${lambokVersion}"
    compileOnly "org.projectlombok:lombok:${lambokVersion}"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "org.springframework.boot:spring-boot-gradle-plugin:${springVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lambokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lambokVersion}"
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.apache.groovy:groovy:${apachGroovyVersion}"
    testImplementation "org.spockframework:spock-core:${spockSpringVersion}"
    testImplementation "org.spockframework:spock-spring:${spockSpringVersion}"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

application {
    // Define the main class for the application.
    mainClass = 'pl.futurecollars.invoicing.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestReport {
    dependsOn test
}
test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.projectDirectory.dir('jacocoHtml')
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = "BRANCH"
                minimum = 0.83
            }
        }
        rule {
            limit {
                counter = "LINE"
                minimum = 0.83
            }
        }
    }
}
def profile = "dev"
bootRun {
    args = ["--spring.profiles.active=" + profile]
}
